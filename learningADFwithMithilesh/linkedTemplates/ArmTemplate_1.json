{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "learningADFwithMithilesh"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/copy_bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get List Of Files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "GetLandingMetadataDataset",
								"type": "DatasetReference",
								"parameters": {
									"entity": {
										"value": "@pipeline().parameters.entity",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get List Of Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get List Of Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "filename",
										"value": {
											"value": "@first(split(item().name,'.'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "BronzeJsonCopy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "landing_dataset",
											"type": "DatasetReference",
											"parameters": {
												"file_name": {
													"value": "@first(split(item().name,'.'))",
													"type": "Expression"
												},
												"entity": {
													"value": "@pipeline().parameters.entity",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "bronze_dataset",
											"type": "DatasetReference",
											"parameters": {
												"entity": {
													"value": "@pipeline().parameters.entity",
													"type": "Expression"
												},
												"file_name": {
													"value": "@variables('filename')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "BronzeCsvCopy",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "landing_dataset",
											"type": "DatasetReference",
											"parameters": {
												"file_name": {
													"value": "@variables('filename')",
													"type": "Expression"
												},
												"entity": {
													"value": "@pipeline().parameters.entity",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "bronze_dataset_backup_csv",
											"type": "DatasetReference",
											"parameters": {
												"entity": {
													"value": "@pipeline().parameters.entity",
													"type": "Expression"
												},
												"file_name": {
													"value": "@variables('filename')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"entity": {
						"type": "string"
					}
				},
				"variables": {
					"filename": {
						"type": "String"
					},
					"delimiter": {
						"type": "String"
					},
					"ingestion_type": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dummy/Copy_To_Bronze"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/unzipAndCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Unzip and copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "raw//sampledata.zip"
							},
							{
								"name": "Destination",
								"value": "landing//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UnzipCopy_Source",
								"type": "DatasetReference",
								"parameters": {
									"file_name": {
										"value": "@pipeline().parameters.source_file_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UnzipCopy_destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"source_file_name": {
						"type": "string",
						"defaultValue": "sampledata"
					}
				},
				"variables": {
					"newvar": {
						"type": "Array"
					},
					"rfw4r": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					},
					"delimiter": {
						"type": "String"
					},
					"ingestion_type": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dummy/Copy_To_Bronze"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileBasedIngestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start_file_landing_details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertPipelineRunDetail]",
							"storedProcedureParameters": {
								"entityName": {
									"value": {
										"value": "@pipeline().parameters.entity",
										"type": "Expression"
									},
									"type": "String"
								},
								"errorMessage": {
									"value": null,
									"type": "String"
								},
								"loadType": {
									"value": "Full Load",
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": null,
									"type": "DateTime"
								},
								"runStage": {
									"value": "Copy_File_to_landing",
									"type": "String"
								},
								"runStartTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Copy File To Landing Started",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End_File_Landing_details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyFileSourceToLanding",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdatePipelineRunDetail]",
							"storedProcedureParameters": {
								"errorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Copy File To Landing Completed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End_File_Landing_details_failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyFileSourceToLanding",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdatePipelineRunDetail]",
							"storedProcedureParameters": {
								"errorMessage": {
									"value": {
										"value": "@activity('CopyFileSourceToLanding').output.errors",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Copy File To Landing Failed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyFileSourceToLanding",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Delimiter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@pipeline().parameters.entity",
										"type": "Expression"
									},
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FileSource_CSV_Dataset",
								"type": "DatasetReference",
								"parameters": {
									"entity_name": {
										"value": "@pipeline().parameters.entity",
										"type": "Expression"
									},
									"delimiter": {
										"value": "@variables('delimiter')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "LandingDataset_Parquet",
								"type": "DatasetReference",
								"parameters": {
									"entity_name": {
										"value": "@pipeline().parameters.entity",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Delimiter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "start_file_landing_details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "delimiter",
							"value": {
								"value": "@if(equals(pipeline().parameters.entity,'Celeste_Products'),';',',')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"entity": {
						"type": "string"
					}
				},
				"variables": {
					"delimiter": {
						"type": "String"
					},
					"ingestion_type": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_Ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Landing_To_Bronze",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "GenericBronzeIngestion",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"entity": {
									"value": "@pipeline().parameters.entity",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "set ingestion_type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('ingestion_type'),'SQL')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "File_To_Landing_ingestion",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "FileBasedIngestion",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"entity": {
												"value": "@pipeline().parameters.entity",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SQL_To_Landing",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DataBaseIngestion",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"entity": {
												"value": "@pipeline().parameters.entity",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Landing_To_Silver",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Landing_To_Bronze",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "GenericSilverIngestion",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"entity": {
									"value": "@pipeline().parameters.entity",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "set ingestion_type",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ingestion_type",
							"value": {
								"value": "@if(endswith(pipeline().parameters.entity,'products'),'File','SQL')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Landing_To_Gold",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Landing_To_Silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "GenericGoldIngestion",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"entity": {
									"value": "@pipeline().parameters.entity",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"entity": {
						"type": "string"
					},
					"ingestion_type": {
						"type": "string"
					}
				},
				"variables": {
					"delimiter": {
						"type": "String"
					},
					"ingestion_type": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FileBasedIngestion')]"
			]
		}
	]
}