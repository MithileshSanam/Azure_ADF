{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "learningADFwithMithilesh"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mithiadls.dfs.core.windows.net/"
		},
		"AzureDatabricks1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0220-063117-iornq1nv"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "mithis.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "mithidb"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "mithiadmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DataBaseIngestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getEntityNames",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@variables('query')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "tableNames",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "start_landing_details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(pipeline().parameters.entity)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "query_false",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "query",
										"value": {
											"value": "@concat('select entityID, entityName from [dbo].[Entity] where entityName = ''', pipeline().parameters.entity, '''')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "query_true",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "query",
										"value": "SELECT entityID, entityName FROM [dbo].[Entity]"
									}
								}
							]
						}
					},
					{
						"name": "start_landing_details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertPipelineRunDetail]",
							"storedProcedureParameters": {
								"entityName": {
									"value": {
										"value": "@pipeline().parameters.entity",
										"type": "Expression"
									},
									"type": "String"
								},
								"errorMessage": {
									"value": null,
									"type": "String"
								},
								"loadType": {
									"value": {
										"value": "@pipeline().parameters.load_type",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": null,
									"type": "DateTime"
								},
								"runStage": {
									"value": "Copy_SQL_to_landing",
									"type": "String"
								},
								"runStartTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Copy SQL To Landing Started",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End_Landing_details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "check load type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdatePipelineRunDetail]",
							"storedProcedureParameters": {
								"errorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Copy SQL To Landing Completed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End_Landing_details_failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "check load type",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdatePipelineRunDetail]",
							"storedProcedureParameters": {
								"errorMessage": {
									"value": "Error Occured",
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Copy SQL To Landing Failed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "check load type",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "getEntityNames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@startswith(toLower(pipeline().parameters.load_type),'full')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Execute IncrementalLoad",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Database_IncrementalLoad_Copy",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"entityNames": {
												"value": "@activity('getEntityNames').output.value",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Execute FullLoadCopy",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Database_FullLoad_Copy",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"entityNames": {
												"value": "@activity('getEntityNames').output.value",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"entity": {
						"type": "string"
					},
					"load_type": {
						"type": "string"
					}
				},
				"variables": {
					"query": {
						"type": "String"
					},
					"delimiter": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tableNames')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/pipelines/Database_IncrementalLoad_Copy')]",
				"[concat(variables('factoryId'), '/pipelines/Database_FullLoad_Copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_Ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Landing_To_Bronze",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set entity_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "GenericBronzeIngestion",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"entity": {
									"value": "@variables('entity_name')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Check Ingestion Type",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "set ingestion_type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('ingestion_type'),'SQL')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "File_To_Landing_ingestion",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "FileBasedIngestion",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"entity": {
												"value": "@pipeline().parameters.entity",
												"type": "Expression"
											},
											"load_type": {
												"value": "@pipeline().parameters.load_type",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SQL_To_Landing",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DataBaseIngestion",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"entity": {
												"value": "@pipeline().parameters.entity",
												"type": "Expression"
											},
											"load_type": {
												"value": "@pipeline().parameters.load_type",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Landing_To_Silver",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Landing_To_Bronze",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "GenericSilverIngestion",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"entity": {
									"value": "@variables('entity_name')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "set ingestion_type",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ingestion_type",
							"value": {
								"value": "@if(endswith(pipeline().parameters.entity,'products'),'File','SQL')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Landing_To_Gold",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Landing_To_Silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "GenericGoldIngestion",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"entity": {
									"value": "@pipeline().parameters.entity",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Set entity_name",
						"description": "",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Check Ingestion Type",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "entity_name",
							"value": {
								"value": "@if(startswith(pipeline().parameters.load_type,'incremental'),\n    concat(pipeline().parameters.entity,'_incremental'),pipeline().parameters.entity)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"entity": {
						"type": "string"
					},
					"load_type": {
						"type": "string"
					}
				},
				"variables": {
					"delimiter": {
						"type": "String"
					},
					"ingestion_type": {
						"type": "String"
					},
					"entity_name": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/GenericBronzeIngestion')]",
				"[concat(variables('factoryId'), '/pipelines/GenericSilverIngestion')]",
				"[concat(variables('factoryId'), '/pipelines/GenericGoldIngestion')]",
				"[concat(variables('factoryId'), '/pipelines/FileBasedIngestion')]",
				"[concat(variables('factoryId'), '/pipelines/DataBaseIngestion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Database_FullLoad_Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_Full Load",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.entityNames",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopySQLtoLanding_Full Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "entityIngestion",
											"type": "DatasetReference",
											"parameters": {
												"table_name": {
													"value": "@item().entityName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LandingDataset_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"entity_name": {
													"value": "@item().entityName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"entityNames": {
						"type": "array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/entityIngestion')]",
				"[concat(variables('factoryId'), '/datasets/LandingDataset_Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Database_IncrementalLoad_Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_Incremental Load",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.entityNames",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopySQLtoLanding_Incremental",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set watermarkValue",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select * from dbo.',item().entityName, ' where lastUpdateDate>''',variables('watermark_value'),'''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "entityIngestion",
											"type": "DatasetReference",
											"parameters": {
												"table_name": {
													"value": "@item().entityName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LandingDataset_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"entity_name": {
													"value": "@concat(item().entityName,'_incremental')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "getWatermarkData",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select lastUpdateDate from dbo.watermarkData where entityID =',item().entityID)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "tableNames",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Set watermarkValue",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "getWatermarkData",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "watermark_value",
										"value": {
											"value": "@first(activity('getWatermarkData').output.value).lastUpdateDate",
											"type": "Expression"
										}
									}
								},
								{
									"name": "update WatermarkTable",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "getMaxWatermarkTS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[updateWatermarkData]",
										"storedProcedureParameters": {
											"entityName": {
												"value": {
													"value": "@item().entityName",
													"type": "Expression"
												},
												"type": "String"
											},
											"lastModifiedDateTime": {
												"value": {
													"value": "@utcNow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"lastUpdateDate": {
												"value": {
													"value": "@first(activity('getMaxWatermarkTS').output.value).max_ts",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "getMaxWatermarkTS",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "CopySQLtoLanding_Incremental",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT max(lastUpdateDate) as max_ts FROM dbo.',item().entityName)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "tableNames",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"entityNames": {
						"type": "array"
					}
				},
				"variables": {
					"watermark_value": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/entityIngestion')]",
				"[concat(variables('factoryId'), '/datasets/LandingDataset_Parquet')]",
				"[concat(variables('factoryId'), '/datasets/tableNames')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileBasedIngestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start_file_landing_details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertPipelineRunDetail]",
							"storedProcedureParameters": {
								"entityName": {
									"value": {
										"value": "@pipeline().parameters.entity",
										"type": "Expression"
									},
									"type": "String"
								},
								"errorMessage": {
									"value": null,
									"type": "String"
								},
								"loadType": {
									"value": {
										"value": "@pipeline().parameters.load_type",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": null,
									"type": "DateTime"
								},
								"runStage": {
									"value": "Copy_File_to_landing",
									"type": "String"
								},
								"runStartTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Copy File To Landing Started",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End_File_Landing_details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdatePipelineRunDetail]",
							"storedProcedureParameters": {
								"errorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Copy File To Landing Completed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End_File_Landing_details_failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdatePipelineRunDetail]",
							"storedProcedureParameters": {
								"errorMessage": {
									"value": "File Load Failed",
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Copy File To Landing Failed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set Delimiter",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "start_file_landing_details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "delimiter",
							"value": {
								"value": "@if(equals(pipeline().parameters.entity,'Celeste_Products'),';',',')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set Delimiter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@startswith(toLower(pipeline().parameters.load_type),'full')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "CopyFileSourceToLanding_IncrementalLoad",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set watermarkValue",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@variables('watermark_val')",
													"type": "Expression"
												},
												"modifiedDatetimeEnd": {
													"value": "@variables('max_ts')",
													"type": "Expression"
												},
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.entity",
													"type": "Expression"
												},
												"wildcardFileName": "*.csv",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "FileSource_CSV_Dataset",
											"type": "DatasetReference",
											"parameters": {
												"entity_name": {
													"value": "@pipeline().parameters.entity",
													"type": "Expression"
												},
												"delimiter": {
													"value": "@variables('delimiter')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LandingDataset_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"entity_name": {
													"value": "@concat(pipeline().parameters.entity,'_incremental')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "getWatermarkData",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Set current_ts",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select lastUpdateDate from dbo.watermarkData where entityID = (select entityID from dbo.Entity where entityName=''',pipeline().parameters.entity,''')')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "tableNames",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Set watermarkValue",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "getWatermarkData",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "watermark_val",
										"value": {
											"value": "@first(activity('getWatermarkData').output.value).lastUpdateDate",
											"type": "Expression"
										}
									}
								},
								{
									"name": "update WatermarkTable",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopyFileSourceToLanding_IncrementalLoad",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[updateWatermarkData]",
										"storedProcedureParameters": {
											"entityName": {
												"value": {
													"value": "@pipeline().parameters.entity",
													"type": "Expression"
												},
												"type": "String"
											},
											"lastUpdateDate": {
												"value": {
													"value": "@formatDateTime(variables('max_ts'), 'yyyy-MM-ddTHH:mm:ss.fZ')",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"lastModifiedDateTime": {
												"value": {
													"value": "@formatDateTime(utcNow(), 'yyyy-MM-ddTHH:mm:ss.fZ')",
													"type": "Expression"
												}
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set current_ts",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "max_ts",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "CopyFileSourceToLanding_FullLoad",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.entity",
													"type": "Expression"
												},
												"wildcardFileName": "*.csv",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "FileSource_CSV_Dataset",
											"type": "DatasetReference",
											"parameters": {
												"entity_name": {
													"value": "@pipeline().parameters.entity",
													"type": "Expression"
												},
												"delimiter": {
													"value": "@variables('delimiter')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LandingDataset_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"entity_name": {
													"value": "@pipeline().parameters.entity",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"entity": {
						"type": "string"
					},
					"load_type": {
						"type": "string"
					}
				},
				"variables": {
					"delimiter": {
						"type": "String"
					},
					"watermark_val": {
						"type": "String"
					},
					"max_ts": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/datasets/FileSource_CSV_Dataset')]",
				"[concat(variables('factoryId'), '/datasets/LandingDataset_Parquet')]",
				"[concat(variables('factoryId'), '/datasets/tableNames')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GenericBronzeIngestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start_bronze_details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertPipelineRunDetail]",
							"storedProcedureParameters": {
								"entityName": {
									"value": {
										"value": "@pipeline().parameters.entity",
										"type": "Expression"
									},
									"type": "String"
								},
								"errorMessage": {
									"value": null,
									"type": "String"
								},
								"loadType": {
									"value": "Full Load",
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": null,
									"type": "DateTime"
								},
								"runStage": {
									"value": "Bronze",
									"type": "String"
								},
								"runStartTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Bronze Started",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LoadBronze",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start_bronze_details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/mithileshadf@outlook.com/Azure_ADF/DE_Project/Databricks_Scripts/Bronze_Ingestion",
							"baseParameters": {
								"entity_name": {
									"value": "@pipeline().parameters.entity",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End_Bronze_details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LoadBronze",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdatePipelineRunDetail]",
							"storedProcedureParameters": {
								"errorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Bronze Completed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End_Bronze_details_failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LoadBronze",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdatePipelineRunDetail]",
							"storedProcedureParameters": {
								"errorMessage": {
									"value": {
										"value": "@activity('LoadBronze').output.errors[0].message",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Bronze Failed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"entity": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GenericGoldIngestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start_gold_details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertPipelineRunDetail]",
							"storedProcedureParameters": {
								"entityName": {
									"value": {
										"value": "@pipeline().parameters.entity",
										"type": "Expression"
									},
									"type": "String"
								},
								"errorMessage": {
									"value": null,
									"type": "String"
								},
								"loadType": {
									"value": "Full Load",
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": null,
									"type": "DateTime"
								},
								"runStage": {
									"value": "Silver",
									"type": "String"
								},
								"runStartTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Gold Started",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LoadGold",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start_gold_details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/mithileshadf@outlook.com/Azure_ADF/DE_Project/Databricks_Scripts/Gold_Ingestion",
							"baseParameters": {
								"entity_name": {
									"value": "@pipeline().parameters.entity",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End_Gold_details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LoadGold",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdatePipelineRunDetail]",
							"storedProcedureParameters": {
								"errorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Gold Completed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End_Gold_details_failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LoadGold",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdatePipelineRunDetail]",
							"storedProcedureParameters": {
								"errorMessage": {
									"value": {
										"value": "@activity('LoadGold').output.error",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Gold Failed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"entity": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GenericSilverIngestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start_silver_details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertPipelineRunDetail]",
							"storedProcedureParameters": {
								"entityName": {
									"value": {
										"value": "@pipeline().parameters.entity",
										"type": "Expression"
									},
									"type": "String"
								},
								"errorMessage": {
									"value": null,
									"type": "String"
								},
								"loadType": {
									"value": "Full Load",
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": null,
									"type": "DateTime"
								},
								"runStage": {
									"value": "Silver",
									"type": "String"
								},
								"runStartTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Silver Started",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LoadSilver",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "start_silver_details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/mithileshadf@outlook.com/Azure_ADF/DE_Project/Databricks_Scripts/Silver_Ingestion",
							"baseParameters": {
								"entity_name": {
									"value": "@pipeline().parameters.entity",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End_Silver_details",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LoadSilver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdatePipelineRunDetail]",
							"storedProcedureParameters": {
								"errorMessage": {
									"value": null,
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Silver Completed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "End_Silver_details_failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LoadSilver",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdatePipelineRunDetail]",
							"storedProcedureParameters": {
								"errorMessage": {
									"value": {
										"value": "@activity('LoadSilver').output.error",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"runEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"runStatus": {
									"value": "Silver Failed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"entity": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileSource_CSV_Dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"entity_name": {
						"type": "string"
					},
					"delimiter": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().entity_name",
							"type": "Expression"
						},
						"fileSystem": "filesource"
					},
					"columnDelimiter": {
						"value": "@dataset().delimiter",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileSource_CSV_Dataset_filename')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"entity_name": {
						"type": "string"
					},
					"delimiter": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().filename,'.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().entity_name",
							"type": "Expression"
						},
						"fileSystem": "filesource"
					},
					"columnDelimiter": {
						"value": "@dataset().delimiter",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LandingDataset_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"entity_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().entity_name,'.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().entity_name",
							"type": "Expression"
						},
						"fileSystem": "landing"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"entity": {
						"type": "string"
					},
					"dir_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().entity,'.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().dir_name",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/entityIngestion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ArancioneID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OnlineRetailer",
						"type": "varchar"
					},
					{
						"name": "SalesMonth",
						"type": "date"
					},
					{
						"name": "Title",
						"type": "varchar"
					},
					{
						"name": "Vintage",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Variety",
						"type": "varchar"
					},
					{
						"name": "Score",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ListPrice",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/landing_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "string"
					},
					"entity": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().file_name,'.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().entity",
							"type": "Expression"
						},
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tableNames')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Entity"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1725301720367654.14.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}